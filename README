libbootimage api



The Main Bootimage Functions
============================

struct bootimage* bootimage_initialize();
bootimage_free(struct bootimage** bip);
bootimage_file_read(struct bootimage* bi,const char* file_name)


The Main Bootimage File Extraction Functions
============================================


bootimage_file_extract_header(const char* file_name,const char* header_name);
bootimage_file_extract_header_block(const char* file_name,const char* header_block_name);
bootimage_file_extract_kernel(const char* file_name,const char* kernel_name);
bootimage_file_extract_kernel_config(const char* file_name,const char* kernel_config_name);
bootimage_file_extract_kernel_config_gz(const char* file_name,const char* kernel_config_gz_name);
bootimage_file_extract_kernel_ramdisk(const char* file_name,const char* kernel_ramdisk_name);
bootimage_file_extract_kernel_ramdisk_archive(const char* file_name,const char* kernel_ramdisk_dir_name);
bootimage_file_extract_kernel_ramdisk_entry(const char* file_name,const char* kernel_ramdisk_entry_name);
bootimage_file_extract_uncompressed_kernel(const char* file_name,const char* uncompressed_kernel_name);
bootimage_file_extract_ramdisk(const char* file_name,const char* ramdisk_name);
bootimage_file_extract_ramdisk_archive(const char* file_name,const char* ramdisk_dir_name);
bootimage_file_extract_ramdisk_entry(const char* file_name,const char* ramdisk_entry_name);



bootimage_file_print_header(const char* file_name);
bootimage_file_print_header_fd(const char* file_name,int fd);
bootimage_file_print_kernel(const char* file_name);
bootimage_file_print_kernel_version(const char* file_name);
bootimage_file_print_ramdisk(const char* file_name);
bootimage_file_print_ramdisk_list(const char* file_name);
bootimage_file_print_ramdisk_file(const char* file_name,const char* ramdisk_file);
bootimage_file_print_ramdisk_files(const char* file_name,const char** ramdisk_files);
bootimage_file_print_all(const char* file_name);

bootimage_extract_header(struct bootimage* bi,const char* header_name);
bootimage_extract_header_block(struct bootimage* bi,const char* header_block_name);
bootimage_extract_kernel(struct bootimage* bi,const char* kernel_name);
bootimage_extract_kernel_config(struct bootimage* bi,const char* kernel_config_name);
bootimage_extract_kernel_config_gz(struct bootimage* bi,const char* kernel_config_gz_name);
bootimage_extract_kernel_ramdisk(struct bootimage* bi,const char* kernel_ramdisk_name);
bootimage_extract_kernel_ramdisk_archive(struct bootimage* bi,const char* kernel_ramdisk_dir_name);
bootimage_extract_kernel_ramdisk_entry(struct bootimage* bi,const char* kernel_ramdisk_entry_name);
bootimage_extract_uncompressed_kernel(struct bootimage* bi,const char* uncompressed_kernel_name);
bootimage_extract_ramdisk(struct bootimage* bi,const char* ramdisk_name);
bootimage_extract_ramdisk_archive(struct bootimage* bi,const char* ramdisk_dir_name);
bootimage_extract_ramdisk_entry(struct bootimage* bi,const char* ramdisk_entry_name);





bootimage-utils features

Print Bootimage Image Header
Print Bootimage Image File Structure
Print Bootimage Type
Fingerprint BootImage

Kernel Compression
Kernel Version
Kernel Uncompressed Size
Kernel Config.gz

List Properties
List Services

Add/Change Service
Add/Change Property


Mount Ramdisk

usage

bootimage-utils extract [ options ] <file>

options:
-i <name> --bootimage=<name> [ default boot.img ]
-d --out-dir - output directory [ default : cwd ]
-k --kernel=<name> [ default : kernel ]
-r --ramdisk=<directory> [ default : ramdisk ]
-x --ramdisk-archive=<name>
-f --ramdisk-file=<name>
-o --output-file=<name>
-F --ramdisk-files=<name>;<name>
-O --output-file=<name>;<name>
-h --header
-







